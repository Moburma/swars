
#ifdef NEED_UNDERSCORE
# define TRANSFORM_SYMBOLS
# define EXPORT_SYMBOL(sym) _ ## sym
#else
# define EXPORT_SYMBOL(sym) sym
#endif

#ifndef TRANSFORM_SYMBOLS

# define GLOBAL(sym) \
  .global sym; \
  sym ##:

# define GLOBAL_FUNC(sym) \
  GLOBAL (sym)

#else

# define GLOBAL(sym) \
  .global EXPORT_SYMBOL (sym); \
  EXPORT_SYMBOL (sym) ##: \
  sym ##:

# define GLOBAL_FUNC(sym) \
  .global sym; \
  GLOBAL (sym)

#endif


.text

.global EXPORT_SYMBOL(things);
.global EXPORT_SYMBOL(data_1a09e0);


/* The debug function which uses this switch was not disassembled.
 * That's a shame. We should re-introduce it.
 */
format_debug_msg_switch_b8d10:
		.long   format_debug_msg_case_b9064
		.long   format_debug_msg_case_b91e9
		.long   format_debug_msg_case_b925e
		.long   format_debug_msg_case_b9299
		.long   format_debug_msg_case_b92db
		.long   format_debug_msg_case_b9444
		.long   format_debug_msg_case_b949d
		.long   format_debug_msg_case_b947f
		.long   format_debug_msg_case_b93ce
		.long   format_debug_msg_case_b9409
		.long   format_debug_msg_case_b92f9
		.long   format_debug_msg_case_b9352
		.long   format_debug_msg_case_b938d
		.long   format_debug_msg_case_b951b
		.long   format_debug_msg_case_b9621
		.long   format_debug_msg_case_b9679
		.long   format_debug_msg_case_b969e
		.long   format_debug_msg_case_b94c2
		.long   format_debug_msg_case_b94fd
		.long   format_debug_msg_case_b9533
		.long   format_debug_msg_case_b903d
		.long   format_debug_msg_case_b96f7
		.long   format_debug_msg_case_b9732
		.long   format_debug_msg_case_b9551
		.long   format_debug_msg_case_b95ab
		.long   format_debug_msg_case_b95c9
		.long   format_debug_msg_case_b96d2
		.long   format_debug_msg_case_b956f
		.long   format_debug_msg_case_b958d
		.long   format_debug_msg_case_b91a2
		.long   format_debug_msg_case_b90d4
		.long   format_debug_msg_case_b91d1
		.long   format_debug_msg_case_b9334
		.long   format_debug_msg_case_b90ae
		.long   format_debug_msg_case_b9100
		.long   format_debug_msg_case_b9173
		.long   format_debug_msg_case_b915b
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_b974a
		.long   format_debug_msg_case_b9885
		.long   format_debug_msg_case_b9919
		.long   format_debug_msg_case_b9785
		.long   format_debug_msg_case_b98aa
		.long   format_debug_msg_case_b9937
		.long   format_debug_msg_case_b97fa
		.long   format_debug_msg_case_b98cf
		.long   format_debug_msg_case_b9955
		.long   format_debug_msg_case_b984a
		.long   format_debug_msg_case_b98f4
		.long   format_debug_msg_case_b9973
		.long   format_debug_msg_case_b99af
		.long   format_debug_msg_case_b99cd
		.long   format_debug_msg_case_b9991
		.long   format_debug_msg_case_b99eb
		.long   format_debug_msg_case_b9a1e
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_b9a54
		.long   format_debug_msg_case_b9b55
		.long   format_debug_msg_case_b9be9
		.long   format_debug_msg_case_b9a8f
		.long   format_debug_msg_case_b9b7a
		.long   format_debug_msg_case_b9c07
		.long   format_debug_msg_case_b9aca
		.long   format_debug_msg_case_b9b9f
		.long   format_debug_msg_case_b9c25
		.long   format_debug_msg_case_b9b1a
		.long   format_debug_msg_case_b9bc4
		.long   format_debug_msg_case_b9c43
		.long   format_debug_msg_case_b9c96
		.long   format_debug_msg_case_b9cb4
		.long   format_debug_msg_case_b9c78
		.long   format_debug_msg_case_b9cd2
		.long   format_debug_msg_case_b9d05
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_ba004
		.long   format_debug_msg_case_b9046
		.long   format_debug_msg_case_b9d42
		.long   format_debug_msg_case_b9e40
		.long   format_debug_msg_case_b9ed1
		.long   format_debug_msg_case_b9d7d
		.long   format_debug_msg_case_b9e65
		.long   format_debug_msg_case_b9eef
		.long   format_debug_msg_case_b9db7
		.long   format_debug_msg_case_b9e89
		.long   format_debug_msg_case_b9f0c
		.long   format_debug_msg_case_b9e06
		.long   format_debug_msg_case_b9ead
		.long   format_debug_msg_case_b9f29
		.long   format_debug_msg_case_b9f7a
		.long   format_debug_msg_case_b9f97
		.long   format_debug_msg_case_b9f5d
		.long   format_debug_msg_case_b9fb4
		.long   format_debug_msg_case_b9fe6
		.long   format_debug_msg_case_b9a3d
		.long   format_debug_msg_case_b9c61
		.long   format_debug_msg_case_b9f46
		.long   format_debug_msg_case_b9118
		.long   format_debug_msg_case_b9144
		.long   format_debug_msg_case_b95e7
		.long   format_debug_msg_case_b9604
		.long   format_debug_msg_case_b9655
		.long   format_debug_msg_case_b918b
		.long   format_debug_msg_case_b9d24
		.long   format_debug_msg_case_b91ba
		.long   format_debug_msg_case_b97c0
		.long   format_debug_msg_case_b9224
		.long   format_debug_msg_case_b92be
		.long   format_debug_msg_case_b9091
		.long   format_debug_msg_case_b902f


/*----------------------------------------------------------------*/
format_debug_msg_case_b902f:
/*----------------------------------------------------------------*/
		push   $aIgnoreEnemies
		push   %esi
		call   ac_sprintf
		add    $0x8,%esp


/*----------------------------------------------------------------*/
format_debug_msg_case_b903d:
/*----------------------------------------------------------------*/
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9046:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aLoopComD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9064:
/*----------------------------------------------------------------*/
		mov    0x6(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x4(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x2(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aGoToPointXDYDZ,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x14,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9091:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		push   $aPlaySampleD
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b90ae:
/*----------------------------------------------------------------*/
		mov    0x6(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x2(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aRunToPointXDZD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x10,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b90d4:
/*----------------------------------------------------------------*/
		mov    0x6(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x2(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aGotopointFaceD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x14,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9100:
/*----------------------------------------------------------------*/
		mov    $aKillEveryone,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x8,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9118:
/*----------------------------------------------------------------*/
		mov    0x6(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x4(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x2(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		push   $aWithinAreaXDYD
		push   %esi
		call   ac_sprintf
		add    $0x14,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9144:
/*----------------------------------------------------------------*/
		push   $aWithinOff
		push   %esi
		call   ac_sprintf
		add    $0x8,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b915b:
/*----------------------------------------------------------------*/
		mov    $aExecuteComsPly,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x8,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9173:
/*----------------------------------------------------------------*/
		mov    $aGuardOff,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x8,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b918b:
/*----------------------------------------------------------------*/
		push   $aHardAsAgent
		push   %esi
		call   ac_sprintf
		add    $0x8,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b91a2:
/*----------------------------------------------------------------*/
		mov    $aPingExist,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x8,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b91ba:
/*----------------------------------------------------------------*/
		push   $aStartDangerMus
		push   %esi
		call   ac_sprintf
		add    $0x8,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b91d1:
/*----------------------------------------------------------------*/
		mov    $aSelf_destruct,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x8,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b91e9:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aGoToPersonD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9224:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		push   $aCameraTrackD
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b925e:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aKillPersonD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9299:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xe(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aKillDMemGroupD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x10,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b92be:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		push   $aUntruceGroupD
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b92db:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aKillAllGroupD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b92f9:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aFollowPersonD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9334:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aProtectMemGD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9352:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aSupportPersonD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b938d:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aProtectPersonD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x10,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b93ce:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aBlockPersonD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9409:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aScarePersonD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9444:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aPersuadePerson,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b947f:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aPersuadeAllGD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b949d:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xe(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aPersuadeDMemGD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x10,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b94c2:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aAvoidPersonD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b94fd:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWandAvoidGroup,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b951b:
/*----------------------------------------------------------------*/
		mov    $aHide,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x8,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9533:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aDestroyBuildin,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9551:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aCatchTrainD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b956f:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aCatchFerryD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b958d:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aExitFerryD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b95ab:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aOpenDomeD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b95c9:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aCloseDomeD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b95e7:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		push   $aLockBuildD
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9604:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		push   $aUnlockBuildD
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9621:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		mov    %eax,%edx
		shl    $0x4,%edx
		sub    %eax,%edx
		mov    EXPORT_SYMBOL(data_1a09e0),%eax
		mov    0x3a(%eax,%edx,4),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aGetItemD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9655:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		mov    weapon_names(,%eax,4),%edx
		push   %edx
		push   $aSelectWeaponS
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9679:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		mov    weapon_names(,%eax,4),%ecx
		push   %ecx
		mov    $aUseWeaponS,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b969e:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		mov    %eax,%edx
		shl    $0x4,%edx
		sub    %eax,%edx
		mov    EXPORT_SYMBOL(data_1a09e0),%eax
		mov    0x3a(%eax,%edx,4),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aDropSpecItemD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b96d2:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		mov    weapon_names(,%eax,4),%ebx
		push   %ebx
		mov    $aDropWeaponS,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b96f7:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aUseVehicleD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9732:
/*----------------------------------------------------------------*/
		mov    $aExitVehicle,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x8,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b974a:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aWaitPVDeadD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9785:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aWaitPVINearD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b97c0:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		push   $aPingPVD
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b97fa:
/*----------------------------------------------------------------*/
		mov    0x6(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x4(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x2(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aWaitPVIArrives,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x18,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b984a:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aWaitPPersuaded,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9885:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xe(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWaitDMemGDeadD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x10,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b98aa:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xe(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWaitDMemGDNear,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x10,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b98cf:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xe(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWaitDMemGArriv,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x10,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b98f4:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xe(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWaitDMemGPersu,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x10,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9919:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWaitAllGDeadD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9937:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWaitAllGDNear,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9955:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWaitAllGArrive,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9973:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWaitAllGPersua,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9991:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWaitMissionSta,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b99af:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWaitMissionSuc,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b99cd:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWaitMissionFai,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b99eb:
/*----------------------------------------------------------------*/
		mov    0x6(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x4(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x2(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWaitObjectDest,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x18,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9a1e:
/*----------------------------------------------------------------*/
		mov    0x10(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWaitTimeD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9a3d:
/*----------------------------------------------------------------*/
		push   $aWaitObj
		push   %esi
		call   ac_sprintf
		add    $0x8,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9a54:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aWandPVDeadD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9a8f:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aWandPVINearD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9aca:
/*----------------------------------------------------------------*/
		mov    0x6(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x4(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x2(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aWandPVIArrives,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x18,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9b1a:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aWandPPersuaded,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9b55:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xe(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWandDMemGDDead,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x10,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9b7a:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xe(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWandDMemGDNear,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x10,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9b9f:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xe(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWandDMemGArriv,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x10,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9bc4:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xe(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWandDMemGPersu,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x10,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9be9:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWandAllGDeadD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9c07:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWandAllGDNear,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9c25:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWandAllGArrive,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9c43:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWandAllGPersua,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9c61:
/*----------------------------------------------------------------*/
		push   $aWandObj
		push   %esi
		call   ac_sprintf
		add    $0x8,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9c78:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWandMissionSta,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9c96:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWandMissionSuc,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9cb4:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWandMissionFai,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9cd2:
/*----------------------------------------------------------------*/
		mov    0x6(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x4(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x2(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWandObjectDest,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x18,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9d05:
/*----------------------------------------------------------------*/
		mov    0x10(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aWandTimeD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9d24:
/*----------------------------------------------------------------*/
		mov    0x10(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		push   $aUntilGDNotSeen
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9d42:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		mov    $aUntilPVDeadD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9d7d:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		push   $aUntilPVINearD
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9db7:
/*----------------------------------------------------------------*/
		mov    0x6(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x4(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x2(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		push   $aUntilPVIArrive
		push   %esi
		call   ac_sprintf
		add    $0x18,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9e06:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		lea    0x0(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x2,%edx
		add    %eax,%edx
		mov    EXPORT_SYMBOL(things),%eax
		mov    0x4e(%eax,%edx,8),%ax
		and    $0xffff,%eax
		push   %eax
		push   $aUntilPPersuade
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9e40:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xe(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aUntilDMemGDead,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0x10,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9e65:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xe(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		push   $aUntilDMemGDNea
		push   %esi
		call   ac_sprintf
		add    $0x10,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9e89:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xe(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		push   $aUntilDMemGArri
		push   %esi
		call   ac_sprintf
		add    $0x10,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9ead:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0xe(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		push   $aUntilDMemGPers
		push   %esi
		call   ac_sprintf
		add    $0x10,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9ed1:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    $aUntilAllGDeadD,%eax
		push   %eax
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9eef:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		push   $aUntilAllGDNear
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9f0c:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		push   $aUntilAllGArriv
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9f29:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		push   $aUntilAllGPersu
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9f46:
/*----------------------------------------------------------------*/
		push   $aUntilObj
		push   %esi
		call   ac_sprintf
		add    $0x8,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9f5d:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		push   $aUntilMissionSt
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9f7a:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		push   $aUntilMissionSu
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9f97:
/*----------------------------------------------------------------*/
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		push   $aUntilMissionFa
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9fb4:
/*----------------------------------------------------------------*/
		mov    0x6(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x4(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    0x2(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		mov    (%edx),%eax
		sar    $0x10,%eax
		push   %eax
		push   $aUntilObjectDes
		push   %esi
		call   ac_sprintf
		add    $0x18,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_b9fe6:
/*----------------------------------------------------------------*/
		mov    0x10(%edx),%eax
		sar    $0x10,%eax
		push   %eax
		push   $aUntilTimeD
		push   %esi
		call   ac_sprintf
		add    $0xc,%esp
		mov    $0x1,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret


/*----------------------------------------------------------------*/
format_debug_msg_case_ba004:
/*----------------------------------------------------------------*/
		xor    %al,%al
		add    $0x4,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret

.section .rodata

weapon_names:
		.long   aWepNull
		.long   aWepUzi
		.long   aWepMinigun
		.long   aWepLaser
		.long   aWepElLaser
		.long   aWepRap
		.long   aWepNuclGren
		.long   aWepPersuadrtrn
		.long   aWepFlamer
		.long   aWepH2HTaser
		.long   aWepCrazyGas
		.long   aWepKOGas
		.long   aWepEleMine
		.long   aWepExplMine
		.long   aWepNapalmMine
		.long   aWepLongRange
		.long   aWepAirStrike
		.long   aWepBeam
		.long   aWepRazorWire
		.long   aWepSonicBlast
		.long   aWepQDevastator
		.long   aWepPersuader2
		.long   aWepStasisFld
		.long   aWepEnergyShld
		.long   aWepSoulGun
		.long   aWepTimeGun
		.long   aWepCerebusIff
		.long   aWepMedi1
		.long   aWepMedi2
		.long   aWepExplWire
		.long   aWepCloneShld
		.long	0x0
		.long   aEmptyItm0
		.long   aEmptyItm1
		.long   aEmptyItm2
		.long   aEmptyItm3
		.long   aEmptyItm4
		.long   aEmptyItm5
		.long   aEmptyItm6


aThDIdD:	/* 0x15DD2C */
		.string "TH %d ID %d"
aThDIdD_0:	/* 0x15DD38 */
		.string "TH %d ID %d"
aD_53:	/* 0x15DD44 */
		.string "%d "
ascU:	/* 0x15DD48 */
		.string "U "
ascIu:	/* 0x15DD4B */
		.string "IU "
data_15dd4f:
		.string "!!!"
aIgnoreEnemies:	/* 0x15DD53 */
		.string "IGNORE ENEMIES"
aLoopComD:	/* 0x15DD62 */
		.string "LOOP COM %d"
aGoToPointXDYDZ:	/* 0x15DD6E */
		.string "GO TO POINT X%d Y%d Z%d"
aPlaySampleD:	/* 0x15DD86 */
		.string "PLAY SAMPLE %d"
aRunToPointXDZD:	/* 0x15DD95 */
		.string "RUN TO POINT X%d Z%d"
aGotopointFaceD:	/* 0x15DDAA */
		.string "GOTOPOINT FACE %d X%d Z%d"
aKillEveryone:	/* 0x15DDC4 */
		.string "KILL EVERYONE"
aWithinAreaXDYD:	/* 0x15DDD2 */
		.string "WITHIN AREA X%d Y%d Z%d"
aWithinOff:	/* 0x15DDEA */
		.string "WITHIN OFF"
aExecuteComsPly:	/* 0x15DDF5 */
		.string "Execute Coms (plyr)"
aGuardOff:	/* 0x15DE09 */
		.string "GUARD OFF"
aHardAsAgent:	/* 0x15DE13 */
		.string "HARD AS AGENT"
aPingExist:	/* 0x15DE21 */
		.string "PING EXIST"
aStartDangerMus:	/* 0x15DE2C */
		.string "start danger music"
aSelf_destruct:	/* 0x15DE3F */
		.string "SELF_DESTRUCT"
aGoToPersonD:	/* 0x15DE4D */
		.string "GO TO PERSON %d"
aCameraTrackD:	/* 0x15DE5D */
		.string "CAMERA TRACK %d"
aKillPersonD:	/* 0x15DE6D */
		.string "KILL PERSON %d"
aKillDMemGroupD:	/* 0x15DE7C */
		.string "KILL %d MEM GROUP %d"
aUntruceGroupD:	/* 0x15DE91 */
		.string "UNTRUCE GROUP %d"
aKillAllGroupD:	/* 0x15DEA2 */
		.string "KILL ALL GROUP %d"
aFollowPersonD:	/* 0x15DEB4 */
		.string "FOLLOW PERSON %d"
aProtectMemGD:	/* 0x15DEC5 */
		.string "PROTECT MEM G %d"
aSupportPersonD:	/* 0x15DED6 */
		.string "SUPPORT PERSON %d"
aProtectPersonD:	/* 0x15DEE8 */
		.string "PROTECT PERSON %d idx %d"
aBlockPersonD:	/* 0x15DF01 */
		.string "BLOCK PERSON %d"
aScarePersonD:	/* 0x15DF11 */
		.string "SCARE PERSON %d"
aPersuadePerson:	/* 0x15DF21 */
		.string "PERSUADE PERSON %d"
aPersuadeAllGD:	/* 0x15DF34 */
		.string "PERSUADE All G %d"
aPersuadeDMemGD:	/* 0x15DF46 */
		.string "PERSUADE %d Mem G %d"
aAvoidPersonD:	/* 0x15DF5B */
		.string "AVOID PERSON %d"
aWandAvoidGroup:	/* 0x15DF6B */
		.string "WAND AVOID GROUP %d"
aHide:	/* 0x15DF7F */
		.string "HIDE"
aDestroyBuildin:	/* 0x15DF84 */
		.string "DESTROY BUILDING %d"
aCatchTrainD:	/* 0x15DF98 */
		.string "CATCH TRAIN %d"
aCatchFerryD:	/* 0x15DFA7 */
		.string "CATCH FERRY %d"
aExitFerryD:	/* 0x15DFB6 */
		.string "EXIT FERRY %d"
aOpenDomeD:	/* 0x15DFC4 */
		.string "OPEN DOME %d"
aCloseDomeD:	/* 0x15DFD1 */
		.string "CLOSE DOME %d"
aLockBuildD:	/* 0x15DFDF */
		.string "LOCK BUILD %d"
aUnlockBuildD:	/* 0x15DFED */
		.string "UNLOCK BUILD %d"
aGetItemD:	/* 0x15DFFD */
		.string "GET ITEM %d"
aSelectWeaponS:	/* 0x15E009 */
		.string "SELECT WEAPON %s "
aUseWeaponS:	/* 0x15E01B */
		.string "USE WEAPON %s"
aDropSpecItemD:	/* 0x15E029 */
		.string "DROP SPEC ITEM %d"
aDropWeaponS:	/* 0x15E03B */
		.string "DROP WEAPON %s"
aUseVehicleD:	/* 0x15E04A */
		.string "USE VEHICLE %d"
aExitVehicle:	/* 0x15E059 */
		.string "EXIT VEHICLE"
aWaitPVDeadD:	/* 0x15E066 */
		.string "WAIT P/V DEAD %d"
aWaitPVINearD:	/* 0x15E077 */
		.string "WAIT P/V/I NEAR %d"
aPingPVD:	/* 0x15E08A */
		.string "PING P/V %d"
aWaitPVIArrives:	/* 0x15E096 */
		.string "WAIT P/V/I ARRIVES %d X%d Y%d Z%d"
aWaitPPersuaded:	/* 0x15E0B8 */
		.string "WAIT P PERSUADED %d"
aWaitDMemGDeadD:	/* 0x15E0CC */
		.string "WAIT %d MEM G DEAD %d"
aWaitDMemGDNear:	/* 0x15E0E2 */
		.string "WAIT %d MEM G %d NEAR "
aWaitDMemGArriv:	/* 0x15E0F9 */
		.string "WAIT %d MEM G ARRIVE %d"
aWaitDMemGPersu:	/* 0x15E111 */
		.string "WAIT %d MEM G PERSUADED %d"
aWaitAllGDeadD:	/* 0x15E12C */
		.string "WAIT ALL G DEAD %d"
aWaitAllGDNear:	/* 0x15E13F */
		.string "WAIT ALL G %d NEAR "
aWaitAllGArrive:	/* 0x15E153 */
		.string "WAIT ALL G ARRIVE %d"
aWaitAllGPersua:	/* 0x15E168 */
		.string "WAIT ALL G PERSUADED %d"
aWaitMissionSta:	/* 0x15E180 */
		.string "WAIT MISSION START %d"
aWaitMissionSuc:	/* 0x15E196 */
		.string "WAIT MISSION SUCC %d"
aWaitMissionFai:	/* 0x15E1AB */
		.string "WAIT MISSION FAIL %d"
aWaitObjectDest:	/* 0x15E1C0 */
		.string "WAIT OBJECT DESTROYED %d X%d Y%d Z%d"
aWaitTimeD:	/* 0x15E1E5 */
		.string "WAIT TIME %d"
aWaitObj:	/* 0x15E1F2 */
		.string "WAIT OBJ:-"
aWandPVDeadD:	/* 0x15E1FD */
		.string "WAND P/V DEAD %d"
aWandPVINearD:	/* 0x15E20E */
		.string "WAND P/V/I NEAR %d"
aWandPVIArrives:	/* 0x15E221 */
		.string "WAND P/V/I ARRIVES %d X%d Y%d Z%d"
aWandPPersuaded:	/* 0x15E243 */
		.string "WAND P PERSUADED %d"
aWandDMemGDDead:	/* 0x15E257 */
		.string "WAND %d MEM G %d DEAD "
aWandDMemGDNear:	/* 0x15E26E */
		.string "WAND %d MEM G %d NEAR "
aWandDMemGArriv:	/* 0x15E285 */
		.string "WAND %d MEM G ARRIVE %d"
aWandDMemGPersu:	/* 0x15E29D */
		.string "WAND %d MEM G PERSUADED %d"
aWandAllGDeadD:	/* 0x15E2B8 */
		.string "WAND ALL G DEAD %d"
aWandAllGDNear:	/* 0x15E2CB */
		.string "WAND ALL G %d NEAR "
aWandAllGArrive:	/* 0x15E2DF */
		.string "WAND ALL G ARRIVE %d"
aWandAllGPersua:	/* 0x15E2F4 */
		.string "WAND ALL G PERSUADED %d"
aWandObj:	/* 0x15E30C */
		.string "WAND OBJ:-"
aWandMissionSta:	/* 0x15E317 */
		.string "WAND MISSION START %d"
aWandMissionSuc:	/* 0x15E32D */
		.string "WAND MISSION SUCC %d"
aWandMissionFai:	/* 0x15E342 */
		.string "WAND MISSION FAIL %d"
aWandObjectDest:	/* 0x15E357 */
		.string "WAND OBJECT DESTROYED %d X%d Y%d Z%d"
aWandTimeD:	/* 0x15E37C */
		.string "WAND TIME %d"
aUntilGDNotSeen:	/* 0x15E389 */
		.string "UNTIL G %d NOT SEEN"
aUntilPVDeadD:	/* 0x15E39D */
		.string "UNTIL P/V DEAD %d"
aUntilPVINearD:	/* 0x15E3AF */
		.string "UNTIL P/V/I NEAR %d"
aUntilPVIArrive:	/* 0x15E3C3 */
		.string "UNTIL P/V/I ARRIVES %d X%d Y%d Z%d"
aUntilPPersuade:	/* 0x15E3E6 */
		.string "UNTIL P PERSUADED %d"
aUntilDMemGDead:	/* 0x15E3FB */
		.string "UNTIL %d MEM G DEAD %d"
aUntilDMemGDNea:	/* 0x15E412 */
		.string "UNTIL %d MEM G %d NEAR "
aUntilDMemGArri:	/* 0x15E42A */
		.string "UNTIL %d MEM G ARRIVE %d"
aUntilDMemGPers:	/* 0x15E443 */
		.string "UNTIL %d MEM G PERSUADED %d"
aUntilAllGDeadD:	/* 0x15E45F */
		.string "UNTIL ALL G DEAD %d"
aUntilAllGDNear:	/* 0x15E473 */
		.string "UNTIL ALL G %d NEAR "
aUntilAllGArriv:	/* 0x15E488 */
		.string "UNTIL ALL G ARRIVE %d"
aUntilAllGPersu:	/* 0x15E49E */
		.string "UNTIL ALL G PERSUADED %d"
aUntilObj:	/* 0x15E4B7 */
		.string "UNTIL OBJ:-"
aUntilMissionSt:	/* 0x15E4C3 */
		.string "UNTIL MISSION START %d"
aUntilMissionSu:	/* 0x15E4DA */
		.string "UNTIL MISSION SUCC %d"
aUntilMissionFa:	/* 0x15E4F0 */
		.string "UNTIL MISSION FAIL %d"
aUntilObjectDes:	/* 0x15E506 */
		.string "UNTIL OBJECT DESTROYED %d X%d Y%d Z%d"
aUntilTimeD:	/* 0x15E52C */
		.string "UNTIL TIME %d"

aWepNull:	/* 0x15E691 */
		.byte	0x0
aWepUzi:	/* 0x15E692 */
		.string " Uzi"
aWepMinigun:	/* 0x15E697 */
		.string " Minigun"
aWepLaser:	/* 0x15E6A0 */
		.string " Laser"
aWepElLaser:	/* 0x15E6A7 */
		.string " Electric Laser"
aWepRap:	/* 0x15E6B7 */
		.string " RAP"
aWepNuclGren:	/* 0x15E6BC */
		.string " Nuclear Grenade"
aWepPersuadrtrn:	/* 0x15E6CD */
		.string " Persuadertron"
aWepFlamer:	/* 0x15E6DC */
		.string " Flamer"
aWepH2HTaser:	/* 0x15E6E4 */
		.string " Hand2Hand Taser"
aWepCrazyGas:	/* 0x15E6F5 */
		.string " Crazy Gas"
aWepKOGas:	/* 0x15E700 */
		.string " Knockout Gas"
aWepEleMine:	/* 0x15E70E */
		.string " Electric Mine"
aWepExplMine:	/* 0x15E71D */
		.string " Explosive Mine"
aWepNapalmMine:	/* 0x15E72D */
		.string " ***Napalm Mine"
aWepLongRange:	/* 0x15E73D */
		.string " Long Range"
aWepAirStrike:	/* 0x15E749 */
		.string " Air Strike"
aWepBeam:	/* 0x15E755 */
		.string " Beam"
aWepRazorWire:	/* 0x15E75B */
		.string " Razor Wire"
aWepSonicBlast:	/* 0x15E767 */
		.string " Sonic Blast"
aWepQDevastator:	/* 0x15E774 */
		.string " Q DEVASTATOR"
aWepPersuader2:	/* 0x15E782 */
		.string " PERSUADERTRON2"
aWepStasisFld:	/* 0x15E792 */
		.string " Stasis Field"
aWepEnergyShld:	/* 0x15E7A0 */
		.string " Energy Shield"
aWepSoulGun:	/* 0x15E7AF */
		.string " Soul Gun"
aWepTimeGun:	/* 0x15E7B9 */
		.string " Time Gun"
aWepCerebusIff:	/* 0x15E7C3 */
		.string " Cerebus IFF"
aWepMedi1:	/* 0x15E7D0 */
		.string " medi 1"
aWepMedi2:	/* 0x15E7D8 */
		.string " medi 2"
aWepExplWire:	/* 0x15E7E0 */
		.string " EXPLODE Wire"
aWepCloneShld:	/* 0x15E7EE */
		.string " Clone Shield"
aEmptyItm0:	/* 0x15E7FC */
		.byte	0x0
aEmptyItm1:	/* 0x15E7FD */
		.byte	0x0
aEmptyItm2:	/* 0x15E7FE */
		.byte	0x0
aEmptyItm3:	/* 0x15E7FF */
		.byte	0x0
aEmptyItm4:	/* 0x15E800 */
		.byte	0x0
aEmptyItm5:	/* 0x15E801 */
		.byte	0x0
aEmptyItm6:	/* 0x15E802 */
		.short  0x0

/* Person state text.
 * Used by function at 0xBAC50, which was not disassembled.
 */
person_st_text:	/* 0x154AAC */
		.long   aSt_null
		.long   aSt_goto_point
		.long   aSt_bomb_buildi
		.long   aSt_wander
		.long   aSt_explode_eff
		.long   aSt_wait
		.long   aSt_agent_defen
		.long   aSt_pickup_item
		.long   aSt_drop_item
		.long   aSt_shoot_perso
		.long   aSt_shoot_bgun_
		.long   aSt_die
		.long   aSt_dieing
		.long   aSt_dead
		.long   aSt_init_save_v
		.long   aSt_save_victim
		.long   aSt_goto_person
		.long   aSt_wait_p_dead
		.long   aSt_wait_all_g_
		.long   aSt_wait_mem_g_
		.long   aSt_wait_p_near
		.long   aSt_wait_mem__0
		.long   aSt_wait_p_arri
		.long   aSt_wait_mem__1
		.long   aSt_wait_time
		.long   aSt_define_rout
		.long   aSt_Unused
		.long   aSt_kill_person
		.long   aSt_block_perso
		.long   aSt_scare_perso
		.long   aSt_use_item
		.long   aSt_stationary_
		.long   aSt_recoil_hit
		.long   aSt_v_parked
		.long   aSt_v_driven
		.long   aSt_goto_point_
		.long   aSt_person_burn
		.long   aSt_in_vehicle
		.long   aSt_driving_veh
		.long   aSt_v_goto_poin
		.long   aSt_persuade_pe
		.long   aSt_follow_pers
		.long   aSt_support_per
		.long   aSt_protect_per
		.long   aSt_get_item
		.long   aSt_use_vehicle
		.long   aSt_use_vehic_0
		.long   aSt_wait_vehicl
		.long   aSt_goto_vehicl
		.long   aSt_catch_train
		.long   aSt_wait_train
		.long   aSt_destroy_bui
		.long   aSt_wander_driv
		.long   aSt_go_plant_mi
		.long   aSt_wait_to_exi
		.long   aSt_catch_ferry
		.long   aSt_exit_ferry
		.long   aSt_avoid_group
		.long   aSt_undef58
		.long   aSt_undef59
		.long   aSt_undef60
		.long   aSt_undef61
		.long   aSt_undef62
		.long   aSt_undef63
		.long   aSt_undef64
		.long   aSt_undef65

aSt_null:	/* 0x15CDC0 */
		.string ""
aSt_goto_point:	/* 0x15CDC1 */
		.string "ST_GOTO_POINT"
aSt_bomb_buildi:	/* 0x15CDCF */
		.string "ST_BOMB_BUILDING"
aSt_wander:	/* 0x15CDE0 */
		.string "ST_WANDER"
aSt_explode_eff:	/* 0x15CDEA */
		.string "ST_EXPLODE_EFFECT"
aSt_wait:	/* 0x15CDFC */
		.string "ST_WAIT"
aSt_agent_defen:	/* 0x15CE04 */
		.string "ST_AGENT_DEFENSIVE"
aSt_pickup_item:	/* 0x15CE17 */
		.string "ST_PICKUP_ITEM"
aSt_drop_item:	/* 0x15CE26 */
		.string "ST_DROP_ITEM"
aSt_shoot_perso:	/* 0x15CE33 */
		.string "ST_SHOOT_PERSON_WITH_BGUN"
aSt_shoot_bgun_:	/* 0x15CE4D */
		.string "ST_SHOOT_BGUN_AT"
aSt_die:	/* 0x15CE5E */
		.string "ST_DIE"
aSt_dieing:	/* 0x15CE65 */
		.string "ST_DIEING"
aSt_dead:	/* 0x15CE6F */
		.string "ST_DEAD"
aSt_init_save_v:	/* 0x15CE77 */
		.string "ST_INIT_SAVE_VICTIM"
aSt_save_victim:	/* 0x15CE8B */
		.string "ST_SAVE_VICTIM"
aSt_goto_person:	/* 0x15CE9A */
		.string "ST_GOTO_PERSON"
aSt_wait_p_dead:	/* 0x15CEA9 */
		.string "ST_WAIT_P_DEAD"
aSt_wait_all_g_:	/* 0x15CEB8 */
		.string "ST_WAIT_ALL_G_DEAD"
aSt_wait_mem_g_:	/* 0x15CECB */
		.string "ST_WAIT_MEM_G_DEAD"
aSt_wait_p_near:	/* 0x15CEDE */
		.string "ST_WAIT_P_NEAR"
aSt_wait_mem__0:	/* 0x15CEED */
		.string "ST_WAIT_MEM_G_NEAR"
aSt_wait_p_arri:	/* 0x15CF00 */
		.string "ST_WAIT_P_ARRIVES"
aSt_wait_mem__1:	/* 0x15CF12 */
		.string "ST_WAIT_MEM_G_ARRIVES"
aSt_wait_time:	/* 0x15CF28 */
		.string "ST_WAIT_TIME"
aSt_define_rout:	/* 0x15CF35 */
		.string "ST_DEFINE_ROUTE"
aSt_Unused:	/* 0x15CF45 */
		.string " UNUSED"
aSt_kill_person:	/* 0x15CF4D */
		.string "ST_KILL_PERSON"
aSt_block_perso:	/* 0x15CF5C */
		.string "ST_BLOCK_PERSON"
aSt_scare_perso:	/* 0x15CF6C */
		.string "ST_SCARE_PERSON"
aSt_use_item:	/* 0x15CF7C */
		.string "ST_USE_ITEM "
aSt_stationary_:	/* 0x15CF89 */
		.string "ST_STATIONARY_SHOT"
aSt_recoil_hit:	/* 0x15CF9C */
		.string "ST_RECOIL_HIT"
aSt_v_parked:	/* 0x15CFAA */
		.string "ST_V_PARKED"
aSt_v_driven:	/* 0x15CFB6 */
		.string "ST_V_DRIVEN"
aSt_goto_point_:	/* 0x15CFC2 */
		.string "ST_GOTO_POINT_REL"
aSt_person_burn:	/* 0x15CFD4 */
		.string "ST_PERSON_BURNING"
aSt_in_vehicle:	/* 0x15CFE6 */
		.string "ST_IN_VEHICLE"
aSt_driving_veh:	/* 0x15CFF4 */
		.string "ST_DRIVING_VEHICLE"
aSt_v_goto_poin:	/* 0x15D007 */
		.string "ST_V_GOTO_POINT_FLY"
aSt_persuade_pe:	/* 0x15D01B */
		.string "ST_PERSUADE_PERSON"
aSt_follow_pers:	/* 0x15D02E */
		.string "ST_FOLLOW_PERSON"
aSt_support_per:	/* 0x15D03F */
		.string "ST_SUPPORT_PERSON"
aSt_protect_per:	/* 0x15D051 */
		.string "ST_PROTECT_PERSON"
aSt_get_item:	/* 0x15D063 */
		.string "ST_GET_ITEM"
aSt_use_vehicle:	/* 0x15D06F */
		.string "ST_USE_VEHICLE"
aSt_use_vehic_0:	/* 0x15D07E */
		.string "ST_USE_VEHICLE_TO_POINT"
aSt_wait_vehicl:	/* 0x15D096 */
		.string "ST_WAIT_VEHICLE"
aSt_goto_vehicl:	/* 0x15D0A6 */
		.string "ST_GOTO_VEHICLE"
aSt_catch_train:	/* 0x15D0B6 */
		.string "ST_CATCH_TRAIN"
aSt_wait_train:	/* 0x15D0C5 */
		.string "ST_WAIT_TRAIN"
aSt_destroy_bui:	/* 0x15D0D3 */
		.string "ST_DESTROY_BUILDING"
aSt_wander_driv:	/* 0x15D0E7 */
		.string "ST_WANDER_DRIVE"
aSt_go_plant_mi:	/* 0x15D0F7 */
		.string "ST_GO_PLANT_MINE"
aSt_wait_to_exi:	/* 0x15D108 */
		.string "ST_WAIT_TO_EXIT_VEHICLE"
aSt_catch_ferry:	/* 0x15D120 */
		.string "ST_CATCH_FERRY"
aSt_exit_ferry:	/* 0x15D12F */
		.string "ST_EXIT_FERRY"
aSt_avoid_group:	/* 0x15D13D */
		.string "ST_AVOID_GROUP"
aSt_undef58:	/* 0x15D14C */
		.string ""
aSt_undef59:	/* 0x15D14D */
		.string ""
aSt_undef60:	/* 0x15D14E */
		.string ""
aSt_undef61:	/* 0x15D14F */
		.string ""
aSt_undef62:	/* 0x15D150 */
		.string ""
aSt_undef63:	/* 0x15D151 */
		.string ""
aSt_undef64:	/* 0x15D152 */
		.string ""
aSt_undef65:	/* 0x15D153 */
		.string ""

